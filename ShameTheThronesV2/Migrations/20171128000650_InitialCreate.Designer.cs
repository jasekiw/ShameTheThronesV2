// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShameTheThronesV2.DB;
using System;

namespace ShameTheThronesV2.Migrations
{
    [DbContext(typeof(ShameTheThronesContext))]
    [Migration("20171128000650_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShameTheThronesV2.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CommentID");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<int?>("RatingID");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("CommentID");

                    b.HasIndex("RatingID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.Rating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<int>("RestroomId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<double>("Value");

                    b.HasKey("ID");

                    b.HasIndex("RestroomId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.Restroom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<byte>("Gender");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(18,14)");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(18,14)");

                    b.Property<string>("PlaceId")
                        .IsRequired();

                    b.Property<double>("Rating");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int?>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Restrooms");
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.Comment", b =>
                {
                    b.HasOne("ShameTheThronesV2.Models.Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentID");

                    b.HasOne("ShameTheThronesV2.Models.Rating")
                        .WithMany("Comments")
                        .HasForeignKey("RatingID");

                    b.HasOne("ShameTheThronesV2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.Rating", b =>
                {
                    b.HasOne("ShameTheThronesV2.Models.Restroom")
                        .WithMany("Ratings")
                        .HasForeignKey("RestroomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShameTheThronesV2.Models.Restroom", b =>
                {
                    b.HasOne("ShameTheThronesV2.Models.User", "User")
                        .WithMany("Restrooms")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
